{"ast":null,"code":"import _toConsumableArray from\"C:/Users/user/Desktop/manisha/notekeeper/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/user/Desktop/manisha/notekeeper/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import uuid from\"react-uuid\";import\"./App.css\";import Main from\"./main/Main\";import Sidebar from\"./sidebar/Sidebar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(localStorage.notes?JSON.parse(localStorage.notes):[]),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),activeNote=_useState4[0],setActiveNote=_useState4[1];useEffect(function(){localStorage.setItem(\"notes\",JSON.stringify(notes));},[notes]);var onAddNote=function onAddNote(){var newNote={id:uuid(),title:\"Untitled Note\",body:\"\",lastModified:Date.now()};setNotes([newNote].concat(_toConsumableArray(notes)));setActiveNote(newNote.id);};var onDeleteNote=function onDeleteNote(noteId){setNotes(notes.filter(function(_ref){var id=_ref.id;return id!==noteId;}));};var onUpdateNote=function onUpdateNote(updatedNote){var updatedNotesArr=notes.map(function(note){if(note.id===updatedNote.id){return updatedNote;}return note;});setNotes(updatedNotesArr);};var getActiveNote=function getActiveNote(){return notes.find(function(_ref2){var id=_ref2.id;return id===activeNote;});};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Sidebar,{notes:notes,onAddNote:onAddNote,onDeleteNote:onDeleteNote,activeNote:activeNote,setActiveNote:setActiveNote}),/*#__PURE__*/_jsx(Main,{activeNote:getActiveNote(),onUpdateNote:onUpdateNote})]});}export default App;","map":{"version":3,"sources":["C:/Users/user/Desktop/manisha/notekeeper/src/App.jsx"],"names":["useEffect","useState","uuid","Main","Sidebar","App","localStorage","notes","JSON","parse","setNotes","activeNote","setActiveNote","setItem","stringify","onAddNote","newNote","id","title","body","lastModified","Date","now","onDeleteNote","noteId","filter","onUpdateNote","updatedNote","updatedNotesArr","map","note","getActiveNote","find"],"mappings":"8PAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,eACaJ,QAAQ,CAChCK,YAAY,CAACC,KAAb,CAAqBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,KAAxB,CAArB,CAAsD,EADtB,CADrB,wCACNA,KADM,eACCG,QADD,8BAIuBT,QAAQ,CAAC,KAAD,CAJ/B,yCAINU,UAJM,eAIMC,aAJN,eAMbZ,SAAS,CAAC,UAAM,CACdM,YAAY,CAACO,OAAb,CAAqB,OAArB,CAA8BL,IAAI,CAACM,SAAL,CAAeP,KAAf,CAA9B,EACD,CAFQ,CAEN,CAACA,KAAD,CAFM,CAAT,CAIA,GAAMQ,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,OAAO,CAAG,CACdC,EAAE,CAAEf,IAAI,EADM,CAEdgB,KAAK,CAAE,eAFO,CAGdC,IAAI,CAAE,EAHQ,CAIdC,YAAY,CAAEC,IAAI,CAACC,GAAL,EAJA,CAAhB,CAOAZ,QAAQ,EAAEM,OAAF,4BAAcT,KAAd,GAAR,CACAK,aAAa,CAACI,OAAO,CAACC,EAAT,CAAb,CACD,CAVD,CAYA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAAY,CAC/Bd,QAAQ,CAACH,KAAK,CAACkB,MAAN,CAAa,kBAAGR,CAAAA,EAAH,MAAGA,EAAH,OAAYA,CAAAA,EAAE,GAAKO,MAAnB,EAAb,CAAD,CAAR,CACD,CAFD,CAIA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,WAAD,CAAiB,CACpC,GAAMC,CAAAA,eAAe,CAAGrB,KAAK,CAACsB,GAAN,CAAU,SAACC,IAAD,CAAU,CAC1C,GAAIA,IAAI,CAACb,EAAL,GAAYU,WAAW,CAACV,EAA5B,CAAgC,CAC9B,MAAOU,CAAAA,WAAP,CACD,CAED,MAAOG,CAAAA,IAAP,CACD,CANuB,CAAxB,CAQApB,QAAQ,CAACkB,eAAD,CAAR,CACD,CAVD,CAYA,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,MAAOxB,CAAAA,KAAK,CAACyB,IAAN,CAAW,mBAAGf,CAAAA,EAAH,OAAGA,EAAH,OAAYA,CAAAA,EAAE,GAAKN,UAAnB,EAAX,CAAP,CACD,CAFD,CAIA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,OAAD,EACE,KAAK,CAAEJ,KADT,CAEE,SAAS,CAAEQ,SAFb,CAGE,YAAY,CAAEQ,YAHhB,CAIE,UAAU,CAAEZ,UAJd,CAKE,aAAa,CAAEC,aALjB,EADF,cAQE,KAAC,IAAD,EAAM,UAAU,CAAEmB,aAAa,EAA/B,CAAmC,YAAY,CAAEL,YAAjD,EARF,GADF,CAYD,CAED,cAAerB,CAAAA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport \"./App.css\";\nimport Main from \"./main/Main\";\nimport Sidebar from \"./sidebar/Sidebar\";\n\nfunction App() {\n  const [notes, setNotes] = useState(\n    localStorage.notes ? JSON.parse(localStorage.notes) : []\n  );\n  const [activeNote, setActiveNote] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled Note\",\n      body: \"\",\n      lastModified: Date.now(),\n    };\n\n    setNotes([newNote, ...notes]);\n    setActiveNote(newNote.id);\n  };\n\n  const onDeleteNote = (noteId) => {\n    setNotes(notes.filter(({ id }) => id !== noteId));\n  };\n\n  const onUpdateNote = (updatedNote) => {\n    const updatedNotesArr = notes.map((note) => {\n      if (note.id === updatedNote.id) {\n        return updatedNote;\n      }\n\n      return note;\n    });\n\n    setNotes(updatedNotesArr);\n  };\n\n  const getActiveNote = () => {\n    return notes.find(({ id }) => id === activeNote);\n  };\n\n  return (\n    <div className=\"App\">\n      <Sidebar\n        notes={notes}\n        onAddNote={onAddNote}\n        onDeleteNote={onDeleteNote}\n        activeNote={activeNote}\n        setActiveNote={setActiveNote}\n      />\n      <Main activeNote={getActiveNote()} onUpdateNote={onUpdateNote} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}